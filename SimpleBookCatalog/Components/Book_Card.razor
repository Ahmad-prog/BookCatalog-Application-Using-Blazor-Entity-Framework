@inject IBookRepository Repository
@inject NavigationManager Navigation

<div class="book-card card mb-4 shadow-none">
    <div class="card-body d-flex justify-content-between align-items-center">
        <div>
            <h5 class="card-title">@Book.Title</h5>
            <h6 class="card-subtitle text-muted mb-2">By @Book.Author</h6>
            <p class="card-text">
                Published on @Book.PublicationDate?.ToString("MMM dd, yyyy")
            </p>
        </div>
        <div class="actions">
            <a href="@($"edit/{Book.Id}")" class="btn btn-warning shadow-none">
                Edit
            </a>
            <button @onclick="OpenConfirmDialog" class="btn btn-danger shadow-none ms-3">
                Delete
            </button>
        </div>
    </div>
</div>

<DeleteConfirmDialog Show="showConfirmDialog" OnCancel="CancelDelete" OnOK="DeleteBook" />



@code {
    private bool showConfirmDialog;

    [Parameter]
    public required Book Book { get; set; }

    private void OpenConfirmDialog()
    {
        showConfirmDialog = true;
    }
    private void CancelDelete()
    {
        showConfirmDialog = false;
    }

    private async Task DeleteBook()
    {
        await Repository.DeleteByIdAsync(Book.Id);
        showConfirmDialog = false;
        Navigation.NavigateTo("/");
    }
}

